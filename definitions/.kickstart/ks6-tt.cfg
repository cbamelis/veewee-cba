install
text  # install in text mode, but allow interaction
#cmdline # install in text/debug mode (no interaction possible, so all install options need to be in this script)
skipx

keyboard us
lang en_US.UTF-8
timezone GMT+1

authconfig --enableshadow --enablemd5
rootpw veewee
user --name veewee --password veewee --shell /bin/bash

network --device eth0 --bootproto=dhcp
firewall --enabled --service=ssh
selinux --disabled

zerombr
clearpart --all --initlabel
bootloader --location=mbr
part /boot --size=256
part pv.01 --grow --size=1
volgroup vg pv.01
logvol swap     --vgname=vg --fstype=swap --size=2000 --name=lv_swap
logvol /        --vgname=vg --fstype=ext4 --size=4000 --name=lv_root
logvol /tmp     --vgname=vg --fstype=ext4 --size=1000 --name=lv_tmp
logvol /var     --vgname=vg --fstype=ext4 --size=8000 --name=lv_var
logvol /var/tmp --vgname=vg --fstype=ext4 --size=500  --name=lv_var_tmp
reboot

%packages --ignoremissing
@core
bzip2
ntp
wget
yum-utils
openssh-server
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware

%post
#!/bin/bash

########## show output of postinstall script ##########
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

########## don't require tty for sudoers ##########
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

########## tomtom repos ##########

mkdir -p /etc/yum.managedrepos.d

cat >> /etc/yum.conf << EOF
# Switch to alternate repository definition direct to avoid conflict
# with packaged repository definitions,
reposdir=/etc/yum.managedrepos.d

# Try and use only arch dependancies
multilib_policy=best
EOF

cat > /etc/yum.managedrepos.d/os.repo << EOF
[os]
name=RedHat x86_64 os (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.os/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
protect=0
EOF

cat > /etc/yum.managedrepos.d/updates.repo << EOF
[updates]
name=RedHat x86_64 updates (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.updates/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
protect=0
EOF

cat > /etc/yum.managedrepos.d/security-testing.repo << EOF
[security-testing]
name=RedHat x86_64 security-testing (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.security-testing/
enabled=1
gpgcheck=0
protect=0
EOF

cat > /etc/yum.managedrepos.d/optional.repo << EOF
[optional]
name=RedHat x86_64 optional (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.optional/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
protect=0
EOF

cat > /etc/yum.managedrepos.d/supplementary.repo << EOF
[supplementary]
name=RedHat x86_64 supplementary (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.supplementary/
enabled=1
gpgcheck=0
protect=0
EOF

cat > /etc/yum.managedrepos.d/epel.repo << EOF
[epel]
name=RedHat x86_64 epel (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.epel/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
protect=0
EOF
wget --no-check-certificate 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6' -O /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

cat > /etc/yum.managedrepos.d/puppetlabs-mcollective.repo << EOF
[puppetlabs-mcollective]
name=RedHat x86_64 puppetlabs-mcollective (mrepo managed)
baseurl=http://repo.amsterdam.tomtom.com/mrepo/rhel6s-x86_64/RPMS.puppetlabs-mcollective/
enabled=1
gpgcheck=0
protect=0
EOF

########## veewee sudo user ##########
yum -y install sudo
VEEWEE_USER=veewee
VEEWEE_SUDOER="${VEEWEE_USER}         ALL=(ALL)       NOPASSWD: ALL"
echo ${VEEWEE_SUDOER} >> /etc/sudoers.d/${VEEWEE_USER}
chmod 0440 /etc/sudoers.d/${VEEWEE_USER}

########## upgrade ##########
yum -y upgrade --skip-broken
yum -y install redhat-lsb

########## install kernel-devel ##########

cd /tmp
KERNEL_DEVEL=kernel-devel-2.6.32-358.11.1.el6.x86_64.rpm
wget ftp://mirror.switch.ch/pool/1/mirror/scientificlinux/6rolling/x86_64/updates/security/${KERNEL_DEVEL} -O /tmp/${KERNEL_DEVEL}
rpm -i /tmp/${KERNEL_DEVEL}
rm /tmp/${KERNEL_DEVEL}

########## customize grub ##########
GRUB_CFG=/boot/grub/menu.lst
sed -i 's/^timeout=.*/timeout=2/' ${GRUB_CFG}
cp ${GRUB_CFG} /etc/grub.conf

%end
